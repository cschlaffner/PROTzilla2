{
  "analysis_level": "protein",
  "sections": {
    "importing": {
      "steps": [
        {
          "name": "ms_data_import",
          "method": "max_quant_import",
          "parameters": {
            "intensity_name": "iBAQ"
          }
        },
        {
          "name": "metadata_import",
          "method": "metadata_import_method",
          "parameters": {
            "feature_orientation": "Columns (samples in rows, features in columns)"
          }
        }
      ]
    },
    "data_preprocessing": {
      "steps": [
        {
          "name": "filter_proteins",
          "method": "low_frequency_filter",
          "parameters": {
            "threshold": 0.2
          },
          "graphs": [
            {
              "graph_type": "Pie chart"
            }
          ]
        },
        {
          "name": "filter_samples",
          "method": "protein_count_filter",
          "parameters": {},
          "graphs": [
            {
              "graph_type": "Bar chart"
            }
          ]
        },
        {
          "name": "filter_samples",
          "method": "proteins_missing_filter",
          "parameters": {},
          "graphs": [
            {
              "graph_type": "Bar chart"
            }
          ]
        },
        {
          "name": "imputation",
          "method": "min_value_per_dataset",
          "parameters": {},
          "graphs": [
            {
              "graph_type": "Boxplot",
              "group_by": "Sample"
            },
            {
              "graph_type_quantites": "Pie chart"
            }
          ]
        },
        {
          "name": "imputation",
          "method": "min_value_per_protein",
          "parameters": {},
          "graphs": [
            {
              "graph_type": "Boxplot",
              "group_by": "Sample"
            },
            {
              "graph_type_quantites": "Pie chart"
            }
          ]
        },
        {
          "name": "imputation",
          "method": "min_value_per_sample",
          "parameters": {},
          "graphs": [
            {
              "graph_type": "Boxplot",
              "group_by": "Sample"
            },
            {
              "graph_type_quantites": "Pie chart"
            }
          ]
        },
        {
          "name": "imputation",
          "method": "simple_imputation_per_protein",
          "parameters": {},
          "graphs": [
            {
              "graph_type": "Boxplot",
              "group_by": "Sample"
            },
            {
              "graph_type_quantites": "Pie chart"
            }
          ]
        },
        {
          "name": "outlier_detection",
          "method": "isolation_forest",
          "parameters": {}
        },
        {
          "name": "outlier_detection",
          "method": "pca",
          "parameters": {}
        },
        {
          "name": "transformation",
          "method": "log_transformation",
          "parameters": {
            "log_base": "log2"
          },
          "graphs": [
            {
              "graph_type": "Boxplot",
              "group_by": "Sample"
            }
          ]
        },
        {
          "name": "normalisation",
          "method": "ref_protein",
          "parameters": {
            "reference_protein": "A0A075B6I0"
          },
          "graphs": [
            {
              "graph_type": "Boxplot",
              "group_by": "Sample"
            }
          ]
        },
        {
          "name": "normalisation",
          "method": "totalsum",
          "parameters": {
          },
          "graphs": [
            {
              "graph_type": "Boxplot",
              "group_by": "Sample"
            }
          ]
        },
        {
          "name": "normalisation",
          "method": "z_score",
          "parameters": {
          },
          "graphs": [
            {
              "graph_type": "Boxplot",
              "group_by": "Sample"
            }
          ],
          "output_name": "preprocessed_data"
        }
      ]
    },
    "data_analysis": {
      "steps": [
        {
          "name": "dimension_reduction",
          "method": "umap",
          "parameters": {
            "input_df": [
              "preprocessed_data",
              "dataframe"
            ],
            "n_neighbors": 15,
            "n_components": 2,
            "min_dist": 0.1,
            "metric": "euclidean",
            "random_state": 42
          },
          "output_name": "umap"
        },
        {
          "name": "clustering",
          "method": "k_means",
          "parameters": {
            "input_df": [
              "umap",
              "embedded_data"
            ],
            "n_clusters": 8,
            "random_state": 6,
            "init_centroid_strategy": "random",
            "n_init": 10,
            "max_iter": 300,
            "tolerance": 0.0001
          },
          "output_name": "k_means"
        },
        {
          "name": "plot",
          "method": "scatter_plot",
          "parameters": {
            "input_df": [
              "umap",
              "embedded_data"
            ],
            "color_df": [
              null,
              null
            ]
          }
        },


        {
          "name": "differential_expression",
          "method": "linear_model",
          "parameters": {
            "intensity_df": [
              "preprocessed_data",
              "dataframe"
            ],
            "multiple_testing_correction_method": "Benjamini-Hochberg",
            "alpha": 0.05,
            "fc_threshold": 0,
            "grouping": "Group",
            "group1": "AD",
            "group2": "CTR",
            "metadata_df": ""
          },
          "output_name": "linear_model"
        },
        {
          "name": "plot",
          "method": "volcano",
          "parameters": {
            "p_values": [
              "linear_model",
              "corrected_p_values_df"
            ],
            "log2_fc": [
              "linear_model",
              "log2_fold_change_df"
            ],
            "fc_threshold": [
              "linear_model",
              "fc_threshold"
            ],
            "alpha": [
              "linear_model",
              "corrected_alpha"
            ]
          }
        }
      ]
    },
    "data_integration": {
      "steps": [
      ]
    }
  }
}
