{
  "analysis_level": "protein",
  "sections": {
    "importing": {
      "steps": [
        {
          "name": "ms_data_import",
          "method": "max_quant_import",
          "parameters": {
            "intensity_name": "Intensity"
          },
          "output_name": null
        },
        {
          "name": "metadata_import",
          "method": "metadata_import_method",
          "parameters": {
            "feature_orientation": "Columns (samples in rows, features in columns)"
          },
          "output_name": null
        }
      ]
    },
    "data_preprocessing": {
      "steps": [
        {
          "name": "filter_proteins",
          "method": "samples_missing_filter",
          "parameters": {
            "percentage": 0.5
          },
          "graphs": [
            {
              "graph_type": "Pie chart"
            }
          ],
          "output_name": null
        },
        {
          "name": "filter_samples",
          "method": "protein_intensity_sum_filter",
          "parameters": {
            "threshold": 2
          },
          "graphs": [
            {
              "graph_type": "Bar chart"
            }
          ],
          "output_name": null
        },
        {
          "name": "transformation",
          "method": "log_transformation",
          "parameters": {
            "log_base": "log2"
          },
          "graphs": [
            {}
          ],
          "output_name": null
        },
        {
          "name": "normalisation",
          "method": "z_score",
          "parameters": {},
          "graphs": [
            {}
          ],
          "output_name": null
        },
        {
          "name": "imputation",
          "method": "min_value_per_sample",
          "parameters": {
            "shrinking_value": 1
          },
          "graphs": [
            {
              "graph_type": "Boxplot",
              "group_by": "None",
              "graph_type_quantites": "Pie chart"
            }
          ],
          "output_name": "data_prep"
        }
      ]
    },
    "data_analysis": {
      "steps": [
        {
          "name": "model_selection",
          "method": "compute_learning_curve",
          "parameters": {
            "clf_str": "Random Forest",
            "input_df": [
              "data_prep",
              "dataframe"
            ],
            "labels_column": "Group",
            "positive_label": "AD",
            "cross_validation_strategy": "Nested CV",
            "inner_cv": "Repeated Stratified K-Fold",
            "outer_cv": "Repeated Stratified K-Fold",
            "n_splits": 10,
            "n_repeats": 10,
            "train_sizes": [
              30,
              40,
              50,
              60,
              70,
              80,
              90,
              100,
              110,
              125
            ],
            "scoring": "accuracy",
            "n_jobs": -1,
            "random_state": 6,
            "metadata_df": ""
          },
          "output_name": "RF learning curve"
        },
        {
          "name": "plot",
          "method": "learning_curve_plot",
          "parameters": {
            "train_sizes": [
              "RF learning curve",
              "train_sizes"
            ],
            "test_scores": [
              "RF learning curve",
              "test_scores"
            ],
            "train_scores": [
              "RF learning curve",
              "train_scores"
            ],
            "score_name": "Accuracy",
            "model_function": "sigmoid",
            "initial_coef_model_function": [0.9584, 0.0422, 81.7743]
          },
          "output_name": null
        },
        {
          "name": "model_selection",
          "method": "random_sampling",
          "parameters": {
            "input_df": [
              "data_prep",
              "dataframe"
            ],
            "labels_column": "Group",
            "n_samples": 63,
            "random_state": 6
          },
          "output_name": "subset"
        },
        {
          "name": "classification",
          "method": "random_forest",
          "parameters": {
            "input_df": [
              "subset",
              "input_df"
            ],
            "labels_column": "Group",
            "positive_label": "AD",
            "test_size": 0.2,
            "split_stratify": "yes",
            "validation_strategy": "Repeated Stratified K-Fold",
            "n_splits": 5,
            "n_repeats": 10,
            "scoring": [
              "accuracy",
              "precision",
              "recall",
              "matthews_corrcoef"
            ],
            "model_selection": "Grid search",
            "model_selection_scoring": "accuracy",
            "n_jobs": -1,
            "n_estimators": [20, 50, 100, 200, 300, 400],
            "max_features": ["sqrt", null, "log2", 0.5, 1.0],
            "criterion": "gini",
            "max_depth": null,
            "random_state": 6,
            "metadata_df": ""
          },
          "output_name": "RF"
        },
        {
          "name": "model_evaluation",
          "method": "evaluate_classification_model",
          "parameters": {
            "model": [
              "RF",
              "model"
            ],
            "input_test_df": [
              "RF",
              "X_test_df"
            ],
            "labels_test_df": [
              "RF",
              "y_test_df"
            ],
            "scoring": [
              "accuracy",
              "precision",
              "recall",
              "matthews_corrcoef"
            ]
          },
          "output_name": null
        },
        {
          "name": "plot",
          "method": "confusion_matrix_plot",
          "parameters": {
            "model": [
              "RF",
              "model"
            ],
            "input_test_df": [
              "RF",
              "X_test_df"
            ],
            "labels_test_df": [
              "RF",
              "y_test_df"
            ],
            "plot_title": "BA39: Random Forest Confusion Matrix"
          },
          "output_name": null
        },
        {
          "name": "plot",
          "method": "roc_curve_plot",
          "parameters": {
            "model": [
              "RF",
              "model"
            ],
            "input_test_df": [
              "RF",
              "X_test_df"
            ],
            "labels_test_df": [
              "RF",
              "y_test_df"
            ],
            "plot_title": "BA39: Random Forests Machine ROC Curve"
          }
        },
        {
          "name": "plot",
          "method": "precision_recall_curve_plot",
          "parameters": {
            "model": [
              "RF",
              "model"
            ],
            "input_test_df": [
              "RF",
              "X_test_df"
            ],
            "labels_test_df": [
              "RF",
              "y_test_df"
            ],
            "plot_title": "BA39: Random Forests Precision-Recall Curve"
          },
          "output_name": null
        },
        {
          "name": "model_evaluation",
          "method": "permutation_testing",
          "parameters": {
            "model": [
              "RF",
              "model"
            ],
            "input_df": [
              "RF",
              "X_train_df"
            ],
            "labels_df": [
              "RF",
              "y_train_df"
            ],
            "cross_validation_strategy": "Repeated Stratified K-Fold",
            "n_splits": 5,
            "n_repeats": 10,
            "shuffle": "yes",
            "scoring": "accuracy",
            "n_permutations": 1000,
            "n_jobs": -1,
            "random_state": 6
          },
          "output_name": "RF permutation testing"
        },
        {
          "name": "plot",
          "method": "permutation_testing_plot",
          "parameters": {
            "score": [
              "RF permutation testing",
              "score"
            ],
            "permutation_scores": [
              "RF permutation testing",
              "permutation_scores"
            ],
            "pvalue": [
              "RF permutation testing",
              "pvalue"
            ],
            "score_name": "Accuracy"
          },
          "output_name": null
        }
      ]
    },
    "data_integration": {
      "steps": []
    }
  }
}