name: CI Pipeline
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      # Gives the action the necessary permissions for publishing new
      # comments in pull requests.
      pull-requests: write
      # Gives the action the necessary permissions for pushing data to the
      # python-coverage-comment-action branch, and for editing existing
      # comments (to avoid publishing multiple comments in the same PR)
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Setup Python
        uses: actions/setup-python@v4.5.0
        with:
          python-version: "3.11"
      
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            !~/.cache/pip/log
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Analysing the code with autoflake
        run: python -m autoflake --in-place --remove-all-unused-imports --remove-unused-variables --expand-star-imports --ignore-init-module-imports $(git ls-files '*.py')

      - name: Print PROJECT_PATH
        run: |
          export PYTHONPATH=. python -c "from protzilla.paths import PROJECT_PATH; print(f'PROJECT_PATH: {PROJECT_PATH}')"
      - name: run tests, build coverage file
        run: |
          export PYTHONPATH=. pytest
          pytest --cache-clear --cov=. --cov-branch --cov-report term-missing tests/
      
      - name: format with black
        run: python -m black .

      - name: Coverage comment
        id: coverage_comment
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Store Pull Request comment to be posted
        uses: actions/upload-artifact@v3
        if: steps.coverage_comment.outputs.COMMENT_FILE_WRITTEN == 'true'
        with:
          name: python-coverage-comment-action
          path: python-coverage-comment-action.txt
